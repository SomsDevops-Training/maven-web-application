node 
{
try{
slacksendnotification('STARTED')
echo "Job Name is: ${env.JOB_NAME}"
echo "Build Number is: ${env.BUILD_NUMBER}"
echo "Build url is: ${env.BUILD_URL}"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '5', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([githubPush()])])
def mavenHome = tool name: "maven3.8.4"
stage ('checkoutcode')
{
git branch: 'developement', credentialsId: '8dd1ef96-f9f1-4823-9a66-7b56decc81fb', url: 'https://github.com/SomsDevops-Training/maven-web-application.git'
}

stage ('buildfrommaven')
{
sh "${mavenHome}/bin/mvn clean package"
}
stage ('TriggerDownstreamJob')
{
buld job: 'pipeline-declarativeway'
}

/*stage ('sonarqubereport')
{
sh "${mavenHome}/bin/mvn sonar:sonar"
}

stage ('uploadartifactory_nexus')
{
sh "${mavenHome}/bin/mvn deploy"
}

stage ('deploytoTomcat')
{
//sshagent(['a5966214-2c05-40c5-ba71-1d6086452535']) {
sh "sshpass -p '112233' scp -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/pipeline-scriptedway/target/maven-web-application.war root@192.168.29.80:/root/apache-tomcat-9.0.71/webapps"
}*/
}
catch (e){
currentBuild.result = "FAILED"
throw e
}
finally{
slacksendnotification(currentBuild.result)
}
}

def slacksendnotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, channel: '#walmart', message: summary)
}
